{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Bayesian\\\\NextjsUdemy\\\\Meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction DetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // getStaticPaths  is a function  ,which you need in dynamic pages to tell NextJS\n// for which dynamic parameter values this page should be pre-generated.\n\n\n_c = DetailsPage;\nexport var __N_SSG = true;\nexport default DetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsPage\");","map":{"version":3,"sources":["D:/Bayesian/NextjsUdemy/Meetup/pages/[meetupId]/index.js"],"names":["ObjectId","MeetupDetail","DetailsPage","props","meetupData","image","title","address","description"],"mappings":";;AAAA,SAAsBA,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;;;KAZSN,W;;AA+DT,eAAeA,WAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction DetailsPage(props) {\r\n  return (\r\n    <MeetupDetail\r\n    image={props.meetupData.image}\r\n    title={props.meetupData.title}\r\n    address={props.meetupData.address}\r\n    description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\n// getStaticPaths  is a function  ,which you need in dynamic pages to tell NextJS\r\n// for which dynamic parameter values this page should be pre-generated.\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n  const db = client.db();\r\n  const meetsupCollection = db.collection('meetups');\r\n  const meetups = await meetsupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    //If you set fall back to false,you say that your paths contains all supported meetup ID values.\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() }\r\n    }))\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm1',\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm2',\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n  const db = client.db();\r\n  const meetsupCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetsupCollection.findOne({ _id: ObmeetupId });\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup\r\n    },\r\n  };\r\n}\r\n\r\nexport default DetailsPage"]},"metadata":{},"sourceType":"module"}