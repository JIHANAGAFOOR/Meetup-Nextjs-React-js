{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Bayesian\\\\NextjsUdemy\\\\Meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction DetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add a new  Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetups and create amazing networking opporunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} // getStaticPaths  is a function  ,which you need in dynamic pages to tell NextJS\n// for which dynamic parameter values this page should be pre-generated.\n\n\n_c = DetailsPage;\nexport var __N_SSG = true;\nexport default DetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsPage\");","map":{"version":3,"sources":["D:/Bayesian/NextjsUdemy/Meetup/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","DetailsPage","props","meetupData","image","title","address","description"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACA,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AACI,QAAA,OAAO,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAMA,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,C,CAED;AACA;;;KArBSN,W;;AA6ET,eAAeA,WAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\r\nimport { Fragment } from 'react'\r\nimport Head from 'next/head'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction DetailsPage(props) {\r\n  return (\r\n    <Fragment>\r\n    <Head>\r\n        <title>Add a new  Meetup</title>\r\n        <meta name='description'\r\n            content='Add your own meetups and create amazing networking opporunities' />\r\n    </Head>\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n</Fragment>\r\n\r\n   \r\n  );\r\n}\r\n\r\n// getStaticPaths  is a function  ,which you need in dynamic pages to tell NextJS\r\n// for which dynamic parameter values this page should be pre-generated.\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n  const db = client.db();\r\n  const meetsupCollection = db.collection('meetups');\r\n  const meetups = await meetsupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    //If you set fall back to false,you say that your paths contains all supported meetup ID values.\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() }\r\n    }))\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm1',\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm2',\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n  const db = client.db();\r\n  const meetsupCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetsupCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport default DetailsPage"]},"metadata":{},"sourceType":"module"}