{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Bayesian\\\\NextjsUdemy\\\\Meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction DetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n} // getStaticPaths  is a function  ,which you need in dynamic pages to tell NextJS\n// for which dynamic parameter values this page should be pre-generated.\n\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetsupCollection = db.collection('meetups');\n  const meetups = await meetsupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    //If you set fall back to false,you say that your paths contains all supported meetup ID values.\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // paths: [\n    //   {\n    //     params: {\n    //       meetupId: 'm1',\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: 'm2',\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetsupCollection = db.collection('meetups');\n  const selectedMeetup = await meetsupCollection.findOne({\n    _id: ObmeetupId\n  });\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default DetailsPage;","map":{"version":3,"sources":["D:/Bayesian/NextjsUdemy/Meetup/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","DetailsPage","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetsupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","ObmeetupId","console","log"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACL;AACAC,IAAAA,QAAQ,EAAE,KAFL;AAGLC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ,CAHF,CAML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBK,GAAP;AAmBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEc;AAAP,GAA1B,CAA7B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEyB;AADP;AADF,GAAP;AAKD;AAED,eAAe3B,WAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction DetailsPage(props) {\r\n  return (\r\n    <MeetupDetail\r\n    image={props.meetupData.image}\r\n    title={props.meetupData.title}\r\n    address={props.meetupData.address}\r\n    description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\n// getStaticPaths  is a function  ,which you need in dynamic pages to tell NextJS\r\n// for which dynamic parameter values this page should be pre-generated.\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n  const db = client.db();\r\n  const meetsupCollection = db.collection('meetups');\r\n  const meetups = await meetsupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    //If you set fall back to false,you say that your paths contains all supported meetup ID values.\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() }\r\n    }))\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm1',\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm2',\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Jihana:Jihaan%40123@cluster0.xi6vh.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n  const db = client.db();\r\n  const meetsupCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetsupCollection.findOne({ _id: ObmeetupId });\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup\r\n    },\r\n  };\r\n}\r\n\r\nexport default DetailsPage"]},"metadata":{},"sourceType":"module"}